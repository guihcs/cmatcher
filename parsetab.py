
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMPLEMENT ID INTERSECTION INVERSE ONPROP RESTRICTION SOMEVAL UNION VALUEs : classexp\n    classexp : class\n                | intersection\n                | union\n                | restriction\n                | complementclass : IDintersection : INTERSECTION "(" classlist ")"union : UNION "(" classlist ")"restriction : RESTRICTION "(" ONPROP "=" propexp "," SOMEVAL "=" classexp ")"\n                   | RESTRICTION "(" ONPROP "=" propexp "," VALUE "=" classexp ")"\n   complement : COMPLEMENT "(" classexp ")"propexp : ID\n               | INVERSE "(" ID ")"classlist : classexp "," classlist\n                 | classexp '
    
_lr_action_items = {'ID':([0,13,14,16,23,25,32,36,37,],[8,8,8,8,8,29,35,8,8,]),'INTERSECTION':([0,13,14,16,23,36,37,],[9,9,9,9,9,9,9,]),'UNION':([0,13,14,16,23,36,37,],[10,10,10,10,10,10,10,]),'RESTRICTION':([0,13,14,16,23,36,37,],[11,11,11,11,11,11,11,]),'COMPLEMENT':([0,13,14,16,23,36,37,],[12,12,12,12,12,12,12,]),'$end':([1,2,3,4,5,6,7,8,22,24,26,41,42,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-12,-10,-11,]),',':([3,4,5,6,7,8,18,22,24,26,28,29,38,41,42,],[-2,-3,-4,-5,-6,-7,23,-8,-9,-12,31,-13,-14,-10,-11,]),')':([3,4,5,6,7,8,17,18,19,21,22,24,26,27,35,39,40,41,42,],[-2,-3,-4,-5,-6,-7,22,-16,24,26,-8,-9,-12,-15,38,41,42,-10,-11,]),'(':([9,10,11,12,30,],[13,14,15,16,32,]),'ONPROP':([15,],[20,]),'=':([20,33,34,],[25,36,37,]),'INVERSE':([25,],[30,]),'SOMEVAL':([31,],[33,]),'VALUE':([31,],[34,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'s':([0,],[1,]),'classexp':([0,13,14,16,23,36,37,],[2,18,18,21,18,39,40,]),'class':([0,13,14,16,23,36,37,],[3,3,3,3,3,3,3,]),'intersection':([0,13,14,16,23,36,37,],[4,4,4,4,4,4,4,]),'union':([0,13,14,16,23,36,37,],[5,5,5,5,5,5,5,]),'restriction':([0,13,14,16,23,36,37,],[6,6,6,6,6,6,6,]),'complement':([0,13,14,16,23,36,37,],[7,7,7,7,7,7,7,]),'classlist':([13,14,23,],[17,19,27,]),'propexp':([25,],[28,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> s","S'",1,None,None,None),
  ('s -> classexp','s',1,'p_s','epc.py',9),
  ('classexp -> class','classexp',1,'p_classexp','epc.py',15),
  ('classexp -> intersection','classexp',1,'p_classexp','epc.py',16),
  ('classexp -> union','classexp',1,'p_classexp','epc.py',17),
  ('classexp -> restriction','classexp',1,'p_classexp','epc.py',18),
  ('classexp -> complement','classexp',1,'p_classexp','epc.py',19),
  ('class -> ID','class',1,'p_class','epc.py',23),
  ('intersection -> INTERSECTION ( classlist )','intersection',4,'p_intersection','epc.py',28),
  ('union -> UNION ( classlist )','union',4,'p_union','epc.py',32),
  ('restriction -> RESTRICTION ( ONPROP = propexp , SOMEVAL = classexp )','restriction',10,'p_restriction','epc.py',36),
  ('restriction -> RESTRICTION ( ONPROP = propexp , VALUE = classexp )','restriction',10,'p_restriction','epc.py',37),
  ('complement -> COMPLEMENT ( classexp )','complement',4,'p_complement','epc.py',43),
  ('propexp -> ID','propexp',1,'p_propexp','epc.py',47),
  ('propexp -> INVERSE ( ID )','propexp',4,'p_propexp','epc.py',48),
  ('classlist -> classexp , classlist','classlist',3,'p_classlist','epc.py',60),
  ('classlist -> classexp','classlist',1,'p_classlist','epc.py',61),
]
